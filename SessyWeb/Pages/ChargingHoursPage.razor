@page "/"
@page "/charginghours"
@inherits PageBase
@using System
@using Radzen
@using Radzen.Blazor
@using SessyWeb.Components

@using SessyController.Services.Items

@if (HourlyInfos != null && HourlyInfos.Count() != 0)
{
    <RadzenCard Style="padding: 3px 3px 5px 10px;">
        <RadzenStack Orientation="@(IsMobile ? Orientation.Vertical : Orientation.Horizontal)" Gap="2" AlignItems="AlignItems.Start">
            @if (!IsMobile)
            {
                <RadzenStack Orientation="Orientation.Vertical" Gap="2" AlignItems="AlignItems.Start" Style="width: 200px;">
                    <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">Date</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@_timeZoneService!.Now.Date.AddDays(-1).ToString("dd MMM yyyy")</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@_timeZoneService!.Now.Date.ToString("dd MMM yyyy") (today)</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@_timeZoneService!.Now.AddDays(1).Date.ToString("dd MMM yyyy")</b></RadzenText>
                </RadzenStack>

                <RadzenStack Orientation="Orientation.Vertical" Gap="2" AlignItems="AlignItems.Start" Style="width: 200px;">
                    <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">Solar power</RadzenText>
                    <div>--</div>
                    <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@TotalSolarPowerExpectedTodayVisual kWh</b></RadzenText>
                    @if (TotalSolarPowerExpectedTomorrow > 0)
                    {
                        <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@TotalSolarPowerExpectedTomorrowVisual kWh</b></RadzenText>
                    }
                </RadzenStack>

                <RadzenStack Orientation="Orientation.Vertical" Gap="2" AlignItems="AlignItems.Start" Style="width: 150px;">
                    <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">Cost</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@TotalRevenueExpectedYesterdayVisual Euro</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@TotalRevenueExpectedTodayVisual Euro</b></RadzenText>
                    <div>--</div>
                </RadzenStack>
            }

            <RadzenStack Orientation="Orientation.Vertical" Gap="2" AlignItems="AlignItems.Start" Style="width: 200px;">
                <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">Battery</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@BatteryPercentageVisual</b></RadzenText>
                <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@BatteryMode</b></RadzenText>
            </RadzenStack>

            <RadzenStack Orientation="Orientation.Horizontal" Style="width: 100%;">
                <RadzenStack Orientation="Orientation.Vertical" Gap="2" AlignItems="AlignItems.Start" Style="width: 150px;">
                    <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">Heartbeat</RadzenText>
                    @if (IsManualOverride)
                    {
                        <RadzenCard>
                            <i class="fas fa-hand hand" style="color: indianred; font-size: 24px;"></i>
                        </RadzenCard>
                    }
                    <RadzenCard>
                        <div style="height: 20px; width: 20px; display: flex; align-items: center; justify-content: center;">
                            @if (IsBeating)
                            {
                                <i class="fas fa-heart heartbeat" style="color: indianred; font-size: 24px;"></i>
                            }
                            else
                            {
                                <i class="fas fa-heart" style="color: transparent; font-size: 24px;"></i>
                            }
                        </div>
                    </RadzenCard>
                </RadzenStack>

                @if (!IsMobile)
                {
                    <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.End" Style="width: 100%;">
                        <RadzenCard>
                        <RadzenButton @ref="ExplanationButton"
                                      Click="@(args => ShowTooltipWithHtml(ExplanationButton!.Element, new TooltipOptions() { Position = TooltipPosition.Left, Style = "background-color: transparent;", Duration = null }))">
                            <i class="fas fa-info" style="color: yellow; font-size: 24px;"></i>
                        </RadzenButton>
                    </RadzenCard>
                </RadzenStack>
                }
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>

    <div style="width: 100%; overflow: auto;">
        <RadzenChart Style=@GraphStyle>
            <RadzenLegend Position="@(IsMobile ? LegendPosition.Right : LegendPosition.Top)" Visible="true" />
            <RadzenChartTooltipOptions Shared="false" Visible="true" />
            <RadzenColumnSeries Data="@HourlyInfos" CategoryProperty="Time" Title="BuyingPrice" LineType="LineType.Dashed" ValueProperty="BuyingPrice">
                <TooltipTemplate Context="data">
                    <ChargingHoursTooltip HourlyInfo=@data />
                </TooltipTemplate>
                <ChildContent>
                    <RadzenMarkers Visible="false" />
                    <RadzenSeriesDataLabels Visible="true" />
                </ChildContent>
            </RadzenColumnSeries>
            <RadzenLineSeries Data="@HourlyInfos" Smooth="true" CategoryProperty="Time" Title="Smoothed price" LineType="LineType.Dotted" ValueProperty="SmoothedPrice">
                <TooltipTemplate Context="data">
                    <ChargingHoursTooltip HourlyInfo=@data />
                </TooltipTemplate>
                <ChildContent>
                    <RadzenMarkers Visible="false" />
                    <RadzenSeriesDataLabels Visible="false" />
                </ChildContent>
            </RadzenLineSeries>
            <RadzenLineSeries Data="@HourlyInfos" Smooth="true" CategoryProperty="Time" Title="Charging mode" ValueProperty="VisualizeInChart">
                <TooltipTemplate Context="data">
                    <ChargingHoursTooltip HourlyInfo=@data />
                </TooltipTemplate>
                <ChildContent>
                    <RadzenMarkers Visible="false" />
                    <RadzenSeriesDataLabels Visible="false" />
                </ChildContent>
            </RadzenLineSeries>
            <RadzenColumnSeries Data="@HourlyInfos" CategoryProperty="Time" Title="Revenue" ValueProperty="ProfitVisual">
                <TooltipTemplate Context="data">
                    <ChargingHoursTooltip HourlyInfo=@data />
                </TooltipTemplate>
                <ChildContent>
                    <RadzenMarkers Visible="false" />
                    <RadzenSeriesDataLabels Visible="false" />
                </ChildContent>
            </RadzenColumnSeries>
            <RadzenLineSeries Data="@HourlyInfos" Smooth="true" CategoryProperty="Time" Title="Charge remaining" ValueProperty="ChargeLeftVisual">
                <TooltipTemplate Context="data">
                    <ChargingHoursTooltip HourlyInfo=@data />
                </TooltipTemplate>
                <ChildContent>
                    <RadzenMarkers Visible="false" />
                    <RadzenSeriesDataLabels Visible="false" />
                </ChildContent>
            </RadzenLineSeries>
            <RadzenLineSeries Data="@HourlyInfos" Smooth="true" CategoryProperty="Time" Title="Solar power" LineType="LineType.Dashed" ValueProperty="SolarPowerVisual">
                <TooltipTemplate Context="data">
                    <ChargingHoursTooltip HourlyInfo=@data />
                </TooltipTemplate>
                <ChildContent>
                    <RadzenMarkers Visible="false" />
                    <RadzenSeriesDataLabels Visible="false" />
                </ChildContent>
            </RadzenLineSeries>
            <RadzenLineSeries Data="@HourlyInfos" Smooth="true" CategoryProperty="Time" Title="Charge needed" LineType="LineType.Dashed" ValueProperty="ChargeNeededVisual">
                <TooltipTemplate Context="data">
                    <ChargingHoursTooltip HourlyInfo=@data />
                </TooltipTemplate>
                <ChildContent>
                    <RadzenMarkers Visible="false" />
                    <RadzenSeriesDataLabels Visible="false" />
                </ChildContent>
            </RadzenLineSeries>
            <RadzenCategoryAxis Padding="40" Formatter="@FormatAsDayHour" TickDistance="75">
                <RadzenGridLines Visible="true" />
                <RadzenAxisTitle Text="Time" />
            </RadzenCategoryAxis>
            <RadzenValueAxis Formatter="@FormatAsPrice">
                <RadzenGridLines Visible="true" />
                <RadzenAxisTitle Text="Price" />
            </RadzenValueAxis>
            <RadzenBarOptions Radius="5" />
        </RadzenChart>
    </div>
}
else
{
    <div>
        No prices yet, just a moment .....
    </div>
}


@code {
    RadzenButton? ExplanationButton;

    void ShowTooltipWithHtml(ElementReference elementReference, TooltipOptions? options = null) => tooltipService!.Open(elementReference, ds =>
@<div style="background-color: transparent;">
        <RadzenImage Path="/Images/ChartExplanation.jpg" Style="padding: 5px;" />

    </div>, options);
}