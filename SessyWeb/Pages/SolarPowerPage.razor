@page "/solarpower"
@inherits PageBase
@using SessyController.Services.Items
@using SessyWeb.Components
@using SessyData.Model
@using Radzen
@using SessyWeb.Helpers
@using static SessyWeb.Components.DateChooserComponent

@code{
    bool ShowDataLabels = false;
    bool ShowMarkers = true;
}

<RadzenLayout Style="height: 80vh;">
    <RadzenHeader Style="height: 100%;margin: 0px; padding: 0px;">
        <RadzenStack Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" Style="height:100%;margin: 0px; padding: 0px;">
            @* TickDistance: <p>@TickDistance</p> *@

            <RadzenLabel Text="Solar power" Component="RadzenDropDownBindValue" class="h4 m-2" />

            <DateChooserComponent PeriodChosen=@PeriodChosen
            DateChosenChanged=@((DateTime d) => DateChosenChanged(d))
            PeriodChosenChanged=@((PeriodsEnums p) => PeriodChosenChanged(p)) />

            <RadzenLabel Text="Select provider" Component="RadzenDropDownBindValue" />

            <RadzenDropDown TValue="string"
                            @bind-Value="selectedProvider"
                            Data="@providerNames"
                            Placeholder="Select provider"
                            Style="width: 200px;" />


            <RadzenLabel Text="Show labels" Component="ShowDataLabels" />
            <RadzenCheckBox @bind-Value="@ShowDataLabels" Name="ShowDataLabels" />

            <RadzenLabel Text="Show markers" Component="ShowMarkers" />
            <RadzenCheckBox @bind-Value="@ShowMarkers" Name="ShowMarkers" />
        </RadzenStack>
    </RadzenHeader>

    <RadzenBody>
        <RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Left" AlignItems="AlignItems.Start" Gap="0.5rem" Style="width: 100%;">

            <RadzenChart Style="@GraphStyle" @ref=SolarPowerChart>
                <RadzenLegend Position="LegendPosition.Top" Visible="true" />
                @foreach (var provider in GroupedData)
                {
                    if (selectedProvider == "All" || selectedProvider == provider.Key)
                    {
                        <RadzenAreaSeries Data="@provider.Value"
                        Title="@provider.Key"
                        CategoryProperty="Time"
                        ValueProperty="Power"
                        Smooth="true"
                        LineType="LineType.Dotted" >
                            <ChildContent>
                                <RadzenMarkers Visible="@ShowMarkers" MarkerType="MarkerType.Circle" />
                                <RadzenSeriesDataLabels Visible="@ShowDataLabels" />
                            </ChildContent>
                        </RadzenAreaSeries>
                    }
                }

                <RadzenValueAxis Formatter="@Formatters.FormatAsRoundedNumberWithZeroSuppression">

                </RadzenValueAxis>

                <RadzenCategoryAxis Formatter=@Formatter TickDistance=@TickDistance>
                    <RadzenGridLines Visible="true" />
                    <RadzenAxisTitle Text="Time" />
                </RadzenCategoryAxis>

            </RadzenChart>
        </RadzenStack>
    </RadzenBody>

    <RadzenFooter>
        <b>@String.Format(GetFormatProvider(), "Total solar power: {0:N2} kWh", SolarPower)</b>
    </RadzenFooter>
</RadzenLayout>

