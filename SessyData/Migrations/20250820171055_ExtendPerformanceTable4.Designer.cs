// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SessyData.Model;

#nullable disable

namespace SessyData.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20250820171055_ExtendPerformanceTable4")]
    partial class ExtendPerformanceTable4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.DataProtectionKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FriendlyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Xml")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DataProtectionKeys");
                });

            modelBuilder.Entity("SessyData.Model.Consumption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("ConsumptionWh")
                        .HasColumnType("REAL");

                    b.Property<double>("GlobalRadiation")
                        .HasColumnType("REAL");

                    b.Property<double>("Humidity")
                        .HasColumnType("REAL");

                    b.Property<double>("Temperature")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Time");

                    b.ToTable("Consumption");
                });

            modelBuilder.Entity("SessyData.Model.EPEXPrices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Price")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Time");

                    b.ToTable("EPEXPrices");
                });

            modelBuilder.Entity("SessyData.Model.EnergyHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("ConsumedTariff1")
                        .HasColumnType("REAL");

                    b.Property<double>("ConsumedTariff2")
                        .HasColumnType("REAL");

                    b.Property<double>("GlobalRadiation")
                        .HasColumnType("REAL");

                    b.Property<string>("MeterId")
                        .HasColumnType("TEXT");

                    b.Property<double>("ProducedTariff1")
                        .HasColumnType("REAL");

                    b.Property<double>("ProducedTariff2")
                        .HasColumnType("REAL");

                    b.Property<int>("TarrifIndicator")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Temperature")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Time");

                    b.ToTable("EnergyHistory");
                });

            modelBuilder.Entity("SessyData.Model.Performance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("BuyingPrice")
                        .HasColumnType("REAL");

                    b.Property<double>("ChargeLeft")
                        .HasColumnType("REAL");

                    b.Property<double>("ChargeLeftPercentage")
                        .HasColumnType("REAL");

                    b.Property<double>("ChargeNeeded")
                        .HasColumnType("REAL");

                    b.Property<bool>("Charging")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Discharging")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DisplayState")
                        .HasColumnType("TEXT");

                    b.Property<double>("EstimatedConsumptionPerQuarterHour")
                        .HasColumnType("REAL");

                    b.Property<double>("MarketPrice")
                        .HasColumnType("REAL");

                    b.Property<double>("Profit")
                        .HasColumnType("REAL");

                    b.Property<double>("SellingPrice")
                        .HasColumnType("REAL");

                    b.Property<double>("SmoothedBuyingPrice")
                        .HasColumnType("REAL");

                    b.Property<double>("SmoothedSellingPrice")
                        .HasColumnType("REAL");

                    b.Property<double>("SolarGlobalRadiation")
                        .HasColumnType("REAL");

                    b.Property<double>("SolarPowerPerQuarterHour")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.Property<double>("VisualizeInChart")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("Time");

                    b.ToTable("Performance");
                });

            modelBuilder.Entity("SessyData.Model.SessyStatusHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<string>("StatusDetails")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Time");

                    b.ToTable("SessyStatusHistory");
                });

            modelBuilder.Entity("SessyData.Model.SessyWebControl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Time");

                    b.ToTable("SessyWebControl");
                });

            modelBuilder.Entity("SessyData.Model.SolarData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("GlobalRadiation")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Time");

                    b.ToTable("SolarData");
                });

            modelBuilder.Entity("SessyData.Model.SolarInverterData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("InverterId")
                        .HasColumnType("TEXT");

                    b.Property<double>("Power")
                        .HasColumnType("REAL");

                    b.Property<string>("ProviderName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Time");

                    b.ToTable("SolarInverterData");
                });

            modelBuilder.Entity("SessyData.Model.Taxes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("CapacityTransportFee")
                        .HasColumnType("REAL");

                    b.Property<double>("EnergyTax")
                        .HasColumnType("REAL");

                    b.Property<double>("FixedTransportFee")
                        .HasColumnType("REAL");

                    b.Property<double>("NetManagementCost")
                        .HasColumnType("REAL");

                    b.Property<bool>("Netting")
                        .HasColumnType("INTEGER");

                    b.Property<double>("PurchaseCompensation")
                        .HasColumnType("REAL");

                    b.Property<double>("ReturnDeliveryCompensation")
                        .HasColumnType("REAL");

                    b.Property<double>("TaxReduction")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("TEXT");

                    b.Property<double>("ValueAddedTax")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Taxes");
                });
#pragma warning restore 612, 618
        }
    }
}
